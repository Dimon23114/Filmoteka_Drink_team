{"mappings":"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","sources":["src/index.js","src/js/trendsMovies.js","src/js/pagination.js","src/js/searchMovies.js","src/js/movieHelpers.js","src/js/preloader.js"],"sourcesContent":["import { refs } from './js/refs';\nimport './js/trendsMovies';\nimport './js/searchMovies';\nimport './js/movieHelpers';\nimport './js/pagination';\nimport './js/preloader';\nimport { onTopBallon } from './js/component/btn-to-top';\nimport './js/openModal';\nimport './js/day-night';\nimport './js/teamModal';\nimport './js/LSW';\nimport './js/LSQ';\nimport './js/ApiService';\n","import { fetchGenresOfMovie, fetchTrendMovies } from './ApiService';\nimport { stylePagination } from './pagination';\n\nconst START_PAGE = 1;\nlet page = START_PAGE;\nlet popularMoviesList = [];\n\nconst cardsMain = document.querySelector('.main-render');\n\ncreateHomeGallery(page);\n\nexport async function createHomeGallery(page) {\n\n  await fetchTrendMovies(page)\n    .then(({ data: { results } }) => {\n      stylePagination(START_PAGE, page);\n      // console.log(results);\n\n      popularMoviesList = [];\n      results.forEach(movie => {\n        let movieData = {\n          id: movie.id,\n          poster: movie.poster_path,\n          title: movie.original_title,\n          genres: movie.genre_ids,\n          year: movie.release_date ? movie.release_date.slice(0, 4) : 'Year N/A',\n        };\n        // console.log(movieData);\n\n        popularMoviesList.push(movieData);\n      });\n    })\n    .catch(error => console.log(error));\n\n  await fetchGenresOfMovie()\n    .then(response => {\n      const {\n        data: { genres },\n      } = response;\n\n      popularMoviesList.forEach(movie => {\n        movie.genres = movie.genres.map(id => {\n          genres.forEach(obj => {\n            if (obj.id === id) {\n              id = obj.name;\n            }\n          });\n          return id;\n        });\n\n        switch (true) {\n          case movie.genres.length > 0 && movie.genres.length <= 2:\n            movie.genres = movie.genres.join(', ');\n            break;\n\n          case movie.genres.length > 2:\n            movie.genres[2] = 'Other';\n            movie.genres = movie.genres.slice(0, 3).join(', ');\n            break;\n\n          default:\n            movie.genres = 'Genre N/A';\n            break;\n        }\n      });\n    })\n    .catch(error => {\n      console.log('Failed to get genres : ', error);\n      popularMoviesList.map(movie => (movie.genres = 'Genres N/A'));\n    });\n\n  cardsMain.innerHTML = popularMoviesList\n    .map(({ id, poster, title, genres, year }) => {\n      return `\n<li class=\"main-render__item\">\n        <a href=\"#\" class=\"main-render__link\" data-id=\"${id}\">\n        <div class=\"main-render__image-box\">\n          <img class=\"main-render__image\"\n          src=\"${poster ? `https://image.tmdb.org/t/p/w500${poster}` : imgPlaceholder}\"\n          alt=\"${title}\" \n          data-id=\"${id}\">\n          </div>\n          <div class=\"main-render__discription\">\n          <h2 class=\"main-render__title\" data-id=\"${id}\">\n            ${title}\n          </h2>\n          <p class=\"main-render__text\" data-id=\"${id}\">${genres} | ${year}</p>\n          </div>\n        </a>\n      </li>\n`;\n    })\n    .join('');\n\n  setTimeout(() => {\n    if (popularMoviesList.length === 0) {\n      const errorText = `<li class=\"api-error\">\n            <p class=\"api-error__desc\">The list of popular movies is temporarily unavailable.<br>Please, retry later!\n            </p>\n            </li>`;\n      cardsMain.innerHTML = errorText;\n    }\n  }, 500);\n}\n\n","// import Pagination from 'tui-pagination';\n// import 'tui-pagination/dist/tui-pagination.min.css';  \n\nconst HOME = 1;\nconst SEARCH = 2;\nconst MY_LIBRARY = 3;\n\nconst site = {\n  currentPage: 0,\n  pagination: null,\n};\n\nconst paginationOptions = {\n  totalPages: 1,\n  totalItems: 20,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  centerAlign: true,\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn-custom\">{{page}}</a>',\n    currentPage: '<strong class=\"tui-page-btn-custom tui-is-selected-custom\">{{page}}</strong>',\n    moveButton:\n      '<a id=\"{{type}}\" href=\"#\" class=\"tui-page-btn-custom tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\"></span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span id=\"{{type}}\" class=\"tui-page-btn-custom tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn-custom tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\nconst paginationBoxEl = document.querySelector('#tui-pagination-container');\n\nconst initPagination = (e_paginationOptions = {}) => {\n  const l_paginationOptions = { ...paginationOptions, ...e_paginationOptions };\n  paginationBoxEl.classList.add('visually-hidden');\n  site.pagination = new Pagination(paginationBoxEl, l_paginationOptions);\n};\n\n\n\nconst getCurrentPage = () => site.pagination.getCurrentPage();\n\nconst stylePagination = (firstPage, curPage) => {\n  let { totalPages, visiblePages } = paginationOptions;\n  const middleVisiblePage = Math.ceil(visiblePages / 2);\n\n  if (totalPages <= 1) {\n    paginationBoxEl.classList.add('visually-hidden');\n  } else {\n    document.querySelector('.tui-page-btn-custom.tui-last').innerHTML = `${totalPages}`;\n    document.querySelector('.tui-page-btn-custom.tui-first').innerHTML = `${firstPage}`;\n\n    if (curPage < firstPage + middleVisiblePage || totalPages <= visiblePages) {\n      document.querySelector('.tui-page-btn-custom.tui-first').classList.add('visually-hidden');\n      document.querySelector('.tui-page-btn-custom.tui-prev').classList.add('visually-hidden');\n    } else {\n      document.querySelector('#prev')?.after(document.querySelector('#first'));\n      document.querySelector('.tui-page-btn-custom.tui-first').classList.remove('visually-hidden');\n      document.querySelector('.tui-page-btn-custom.tui-prev').classList.remove('visually-hidden');\n    }\n\n    if (curPage > totalPages - middleVisiblePage || totalPages <= visiblePages) {\n      document.querySelector('.tui-page-btn-custom.tui-last').classList.add('visually-hidden');\n      document.querySelector('.tui-page-btn-custom.tui-next').classList.add('visually-hidden');\n    } else {\n      document.querySelector('#last')?.after(document.querySelector('#next'));\n      document.querySelector('.tui-page-btn-custom.tui-last').classList.remove('visually-hidden');\n      document.querySelector('.tui-page-btn-custom.tui-next').classList.remove('visually-hidden');\n    }\n    paginationBoxEl.classList.remove('visually-hidden');\n  }\n};\n\nexport {\n  initPagination,  \n  getCurrentPage,\n  stylePagination,\n  HOME,\n  SEARCH,\n  MY_LIBRARY,\n  site,\n  paginationBoxEl,\n};","import { fetchSearchAnyMovie, fetchGenresOfMovie } from './ApiService';\nimport { refs } from './refs';\nimport { renderGalleryCardsMovies, fillMovieGenres, fillMovieYear} from './movieHelpers'\n\nrefs.searchForm.addEventListener('submit', onGalleryMoviesFormSubmit);\n\nasync function onGalleryMoviesFormSubmit(e) {\n    e.preventDefault();\n\n    let query = e.target.elements.searchQuery.value.trim();\n    let page = 1;\n\n    if (query === \"\") {\n        return;\n    }\n\n    refs.mainRenderList.innerHTML = '';\n\n    const response = await fetchSearchAnyMovie(query);\n    if (response === null) {\n        refs.searchTextBox.innerHTML = `Search result not successful. Enter the correct movie name and `;\n        return;\n    }\n\n    if (response.total_pages === 0) {\n        refs.searchTextBox.innerHTML = `Search result not successful. Enter the correct movie name and `;\n        return;\n    }\n    \n    refs.searchTextBox.innerHTML = '';\n\n    const genres = await fetchGenresOfMovie();\n\n    response.results.forEach(movie => {\n        fillMovieGenres(movie, genres.data.genres);\n        fillMovieYear(movie);\n    });\n\n    refs.mainRenderList.innerHTML = renderGalleryCardsMovies(response.results);\n}\n","export function renderGalleryCardsMovies(arr) {\n    const markup = arr.reduce((acc, obj) => acc + `\n    <li class=\"main-render__item\">\n        <a href=\"#\" class=\"main-render__link\" data-id=\"${obj.id}\">\n        <div class=\"main-render__image-box\">\n          <img class=\"main-render__image\"\n          src=\"${obj.poster_path ? `https://image.tmdb.org/t/p/w500${obj.poster_path}` : obj.imgPlaceholder}\"\n          alt=\"${obj.original_title}\" \n          data-id=\"${obj.id}\">\n          </div>\n          <div class=\"main-render__discription\">\n          <h2 class=\"main-render__title\" data-id=\"${obj.id}\">\n            ${obj.original_title}\n          </h2>\n          <p class=\"main-render__text\" data-id=\"${obj.id}\">${obj.genres} | ${obj.year}</p>\n          </div>\n        </a>\n      </li>`, '');\n    return markup;\n}\n\nexport function fillMovieGenres(movie, genres) {\n  movie.genres = movie.genre_ids.map(id => {\n    genres.forEach(obj => {\n      if (obj.id === id) {\n        id = obj.name;\n      }\n    });\n    return id;\n  });\n\n  switch (true) {\n    case movie.genres.length > 0 && movie.genres.length <= 2:\n      movie.genres = movie.genres.join(', ');\n      break;\n\n    case movie.genres.length > 2:\n      movie.genres[2] = 'Other';\n      movie.genres = movie.genres.slice(0, 3).join(', ');\n      break;\n\n    default:\n      movie.genres = 'Genre N/A';\n      break;\n  }\n}\n\nexport function fillMovieYear(movie) {\n  movie.year = movie.release_date ? movie.release_date.slice(0, 4) : 'Year N/A';\n}\n","\ndocument.querySelector('.preloader');\n\nwindow.addEventListener('load', () => {\n    preloader.classList.add('preloader--hide');\n    setTimeout(() => {\n        preloader.remove();\n    }, 1000);\n});\n\n"],"names":["parcelRequire","$4kseb","$1bab9c519cfa82bc$var$paginationOptions","totalPages","totalItems","itemsPerPage","visiblePages","centerAlign","template","page","currentPage","moveButton","disabledMoveButton","moreButton","$1bab9c519cfa82bc$export$c7130398bc01f65f","document","querySelector","$1bab9c519cfa82bc$export$2757c4e5dbc2f5a3","firstPage","curPage","middleVisiblePage","Math","ceil","classList","add","ref","ref1","innerHTML","after","remove","$2784d0dc43150543$var$popularMoviesList","$2784d0dc43150543$var$cardsMain","async","page1","fetchTrendMovies","then","data","results","forEach","movie","movieData","id","poster","poster_path","title","original_title","genres","genre_ids","year","release_date","slice","push","catch","error","console","log","fetchGenresOfMovie","response","map","obj","name","length","join","imgPlaceholder","setTimeout","errorText","$2784d0dc43150543$export$54a46953e481600a","$9bcff0ebaa348d92$export$fe516885eddca45","$9bcff0ebaa348d92$export$8988c9ce5b5fa5aa","$krGWQ","refs","searchForm","addEventListener","e","preventDefault","query","target","elements","searchQuery","value","trim","mainRenderList","fetchSearchAnyMovie","searchTextBox","total_pages","arr","reduce","acc","window","preloader"],"version":3,"file":"index.550adc14.js.map"}