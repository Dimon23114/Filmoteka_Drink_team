{"mappings":"oeAAAA,EAAA,S,4CCAAA,EAAA,S,2CAKwBC,SAASC,cAAc,yBAA/C,MACMC,EAAqBF,SAASC,cAAc,mBAC5CE,EAAoBH,SAASC,cAAc,kBAC3CG,EAAaJ,SAASC,cAAc,gBACpCI,EAAWL,SAASC,cAAc,cAExCC,EAAmBI,iBAAiB,QAASC,EAAAC,cAC7CN,EAAmBI,iBAAiB,QAASC,EAAAE,gBAC7CP,EAAmBI,iBAAiB,QAASI,EAAAC,WAE7CR,EAAkBG,iBAAiB,QAASC,EAAAC,cAC5CL,EAAkBG,iBAAiB,QAASC,EAAAE,gBAC5CN,EAAkBG,iBAAiB,QAASI,EAAAC,WAE5CC,OAAON,iBAAiB,OAAQO,GAChCR,EAASC,iBAAiB,SAuE1B,SAAuBQ,GACnBA,EAAIC,iBACJZ,EAAkBa,MAAMC,QAAU,OAClCb,EAAWc,UAAUC,OAAO,eAC5Bd,EAASa,UAAUE,IAAI,eACvBR,OAAOS,oBAAoB,OAAQR,GAKnCX,EAAmBc,MAAMC,QAAU,OACnCf,EAAmBoB,UAAY,GApCnC,SAAwBR,GACpBA,EAAIC,iBAEJ,MAAMQ,EAAQC,aAAaC,QAAQ,cAC7BC,EAAaH,EAAQI,KAAKC,MAAML,GAAS,GAErB,IAAtBG,EAAWG,OACX1B,EAAkBmB,UAAY,4HAK9BI,EAAWI,KAAIC,IACX5B,EAAkB6B,mBAAmB,YAAaC,EAAoBF,GAAM,G,CAmBpFG,CAAepB,E,IA7EnBV,EAAWE,iBAAiB,SA8D5B,SAAwBQ,GACpBA,EAAIC,iBACJb,EAAmBc,MAAMC,QAAU,OACnCZ,EAASa,UAAUC,OAAO,eAC1Bf,EAAWc,UAAUE,IAAI,eAkBzBjB,EAAkBa,MAAMC,QAAU,OAClCd,EAAkBmB,UAAY,GAjB9BT,EAAgBC,E,IAjEAa,KAAKC,MAAMJ,aAAaC,QAAQ,iBACjCE,KAAKC,MAAMJ,aAAaC,QAAQ,eAEnD,SAASQ,EAAoBF,GAEzB,MAAMI,EAAa,GAIbC,GAHYL,EAAKK,OAAON,KAAIO,IAC9BF,EAAWG,KAAKD,EAAME,KAAK,IAEhBJ,EAAWK,KAAK,OAEzBC,EAAOV,EAAKW,aAAaC,MAAM,EAAG,IAAMZ,EAAKa,eAAeD,MAAM,EAAG,GAc3E,MAZe,0FACsCZ,EAAKc,sGAEZd,EAAKe,kCACpCf,EAAKgB,gBAAkBhB,EAAKQ,gCACxBR,EAAKc,6DAC0Bd,EAAKc,qBAC7Cd,EAAKgB,gBAAkBhB,EAAKQ,8EAEUR,EAAKc,OAAOT,OAAYK,oC,CAK5E,SAAS5B,EAAgBC,GACrBA,EAAIC,iBAEJ,MAAMiC,EAAUxB,aAAaC,QAAQ,gBAC/BwB,EAAeD,EAAUrB,KAAKC,MAAMoB,GAAW,GAEzB,IAAxBC,EAAapB,SACb3B,EAAmBoB,UAAY,8HAInC2B,EAAanB,KAAIC,IACT7B,EAAmB8B,mBAAmB,YAAaC,EAAoBF,GAAM,G,CA+CzFmB,EAAAC,KAAKC,cAAc9C,iBAAiB,SAIpC,SAA2BQ,GAGvB,GAFAA,EAAIC,iBAEAV,EAASa,UAAUmC,SAAS,eAAgB,CAC5C,MAAM9B,EAAQC,aAAaC,QAAQ,cAC7BC,EAAaH,EAAQI,KAAKC,MAAML,GAAS,GAErB,IAAtBG,EAAWG,OACX1B,EAAkBmB,UAAY,qIAK9BnB,EAAkBmB,UAAY,GAC9BI,EAAWI,KAAIC,IACX5B,EAAkB6B,mBAAmB,YAAaC,EAAoBF,GAAM,I,CAIxF,GAAI3B,EAAWc,UAAUmC,SAAS,eAAgB,CAC9C,MAAML,EAAUxB,aAAaC,QAAQ,gBAC/BwB,EAAeD,EAAUrB,KAAKC,MAAMoB,GAAW,GAEzB,IAAxBC,EAAapB,OACb3B,EAAmBoB,UAAY,sIAK/BpB,EAAmBoB,UAAY,GAC/B2B,EAAanB,KAAIC,IACjB7B,EAAmB8B,mBAAmB,YAAaC,EAAoBF,GAAM,I,KAlCzFnB,OAAON,iBAAiB,WA4ExB,SAA6BgD,GAErB,GADJC,QAAQC,IAAIF,EAAMG,MACK,WAAfH,EAAMG,KAAmB,CAEzB,GADAF,QAAQC,IAAI,QACRnD,EAASa,UAAUmC,SAAS,eAAgB,CACpD,MAAM9B,EAAQC,aAAaC,QAAQ,cAC7BC,EAAaH,EAAQI,KAAKC,MAAML,GAAS,GAErB,IAAtBG,EAAWG,OACX1B,EAAkBmB,UAAY,qIAK9BnB,EAAkBmB,UAAY,GAC9BI,EAAWI,KAAIC,IACX5B,EAAkB6B,mBAAmB,YAAaC,EAAoBF,GAAM,I,CAIhF,GAAI3B,EAAWc,UAAUmC,SAAS,eAAgB,CAC9C,MAAML,EAAUxB,aAAaC,QAAQ,gBAC/BwB,EAAeD,EAAUrB,KAAKC,MAAMoB,GAAW,GAEzB,IAAxBC,EAAapB,OACb3B,EAAmBoB,UAAY,sJAK/BpB,EAAmBoB,UAAY,GAC/B2B,EAAanB,KAAIC,IACjB7B,EAAmB8B,mBAAmB,YAAaC,EAAoBF,GAAM,I,MA3GjGmB,EAAAC,KAAKO,SAASpD,iBAAiB,SAsC/B,SAA2BgD,GAEzB,GADAA,EAAMvC,iBACFuC,EAAMK,SAAWT,EAAAC,KAAKO,SAAU,CAClC,GAAIrD,EAASa,UAAUmC,SAAS,eAAgB,CAC5C,MAAM9B,EAAQC,aAAaC,QAAQ,cAC7BC,EAAaH,EAAQI,KAAKC,MAAML,GAAS,GAErB,IAAtBG,EAAWG,OACX1B,EAAkBmB,UAAY,qIAK9BnB,EAAkBmB,UAAY,GAC9BI,EAAWI,KAAIC,IACX5B,EAAkB6B,mBAAmB,YAAaC,EAAoBF,GAAM,I,CAIxF,GAAI3B,EAAWc,UAAUmC,SAAS,eAAgB,CAC9C,MAAML,EAAUxB,aAAaC,QAAQ,gBAC/BwB,EAAeD,EAAUrB,KAAKC,MAAMoB,GAAW,GAEzB,IAAxBC,EAAapB,OACb3B,EAAmBoB,UAAY,sIAK/BpB,EAAmBoB,UAAY,GAC/B2B,EAAanB,KAAIC,IACjB7B,EAAmB8B,mBAAmB,YAAaC,EAAoBF,GAAM,I","sources":["src/library.js","src/js/getFromStorage.js"],"sourcesContent":["import { refs } from './js/refs';\nimport './js/AuthenticationService';\nimport { onTopBallon } from './js/component/btn-to-top';\nimport './js/day-night';\nimport './js/teamModal';\nimport './js/getFromStorage';\nimport './js/set-to-watched';\nimport './js/ApiService';\n","import axios from \"axios\"\nimport { toggleClassHidden, openBackDrop, cleanBackDrop, modalKeyDown, closeModal, addClassHidden } from \"./openModal\"\nimport { refs } from \"./refs\"\nimport { getToBtns } from \"./component/getToBtns\"\n\nconst libraryMainList = document.querySelector(\"[data-film-modal-open\")\nconst libraryWatchedList = document.querySelector(\".watched-render\")\nconst libraryQueuedList = document.querySelector(\".queued-render\")\nconst watchedBTN = document.querySelector(\".watched-btn\")\nconst queueBTN = document.querySelector(\".queue-btn\")\n\nlibraryWatchedList.addEventListener(\"click\", openBackDrop)\nlibraryWatchedList.addEventListener(\"click\", addClassHidden)\nlibraryWatchedList.addEventListener(\"click\", getToBtns)\n\nlibraryQueuedList.addEventListener(\"click\", openBackDrop)\nlibraryQueuedList.addEventListener(\"click\", addClassHidden)\nlibraryQueuedList.addEventListener(\"click\", getToBtns)\n\nwindow.addEventListener(\"load\", showWatchedList)\nqueueBTN.addEventListener(\"click\", openQueueList)\nwatchedBTN.addEventListener(\"click\", openWathedList)\n\n\nconst watchedList = JSON.parse(localStorage.getItem(\"watched_list\"))\nconst queuedList = JSON.parse(localStorage.getItem(\"queue_list\"))\n\nfunction createLibraryMarkup(film) {\n\n    const genresList = []\n    const genreList = film.genres.map(genre => {\n        genresList.push(genre.name)\n    })\n    const genres = genresList.join(', ')\n    \n    const date = film.release_date.slice(0, 4) || film.first_air_date.slice(0, 4)\n\n    const markup = `<li class=\"main-render__item\">\n        <a href=\"#\" class=\"main-render__link\" data-id=\"${film.id}\">\n            <img class=\"main-render__image\"\n            src=\"https://image.tmdb.org/t/p/w500${film.poster_path}\"\n            alt=\"${film.original_title || film.name}\" \n            data-id=\"${film.id}\">\n            <h2 class=\"main-render__title\" data-id=\"${film.id}\">\n            ${film.original_title || film.name}\n            </h2>\n            <p class=\"main-render__text\" data-id=\"${film.id}\">${genres} | ${date}</p>\n        </a>\n        </li>`\n    return markup\n}\nfunction showWatchedList(evt) {\n    evt.preventDefault()\n\n    const watched = localStorage.getItem(\"watched_list\")\n    const watchedFilms = watched ? JSON.parse(watched) : []\n\n    if (watchedFilms.length === 0) {\n        libraryWatchedList.innerHTML = `<li class=\"api-error\">\n            <p class=\"api-error__desc\">The list of watched movies is empty.</p>\n            </li>`\n    }\n    watchedFilms.map(film => {\n            libraryWatchedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n        })\n}\nfunction showQueuedList(evt) {\n    evt.preventDefault()\n\n    const queue = localStorage.getItem(\"queue_list\")\n    const queueFilms = queue ? JSON.parse(queue) : []\n\n    if (queueFilms.length === 0) {\n        libraryQueuedList.innerHTML = `<li class=\"api-error\">\n            <p class=\"api-error__desc\">The list of queued movies is empty.</p>\n            </li>`\n    }\n    else {\n        queueFilms.map(film => {\n            libraryQueuedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n        })\n    }\n}\nfunction openWathedList(evt) {\n    evt.preventDefault()\n    libraryWatchedList.style.display = \"grid\"\n    queueBTN.classList.remove(\"btn--active\")\n    watchedBTN.classList.add(\"btn--active\")\n    cleanQueuedList()\n    showWatchedList(evt)\n}\nfunction openQueueList(evt) {\n    evt.preventDefault()\n    libraryQueuedList.style.display = \"grid\"\n    watchedBTN.classList.remove(\"btn--active\")\n    queueBTN.classList.add(\"btn--active\")\n    window.removeEventListener(\"load\", showWatchedList)\n    cleanWatchedList()\n    showQueuedList(evt)\n}\nfunction cleanWatchedList() {\n    libraryWatchedList.style.display = \"none\"\n    libraryWatchedList.innerHTML = \"\"\n}\nfunction cleanQueuedList() {\n    libraryQueuedList.style.display = \"none\"\n    libraryQueuedList.innerHTML = \"\"\n}\n\n\nrefs.modalCloseBtn.addEventListener(\"click\", restoreTheLibrary)\nwindow.addEventListener('keydown', libraryModalKeyDown);\nrefs.backdrop.addEventListener('click', libraryCloseModal);\n\nfunction restoreTheLibrary(evt) {\n    evt.preventDefault()\n\n    if (queueBTN.classList.contains(\"btn--active\")) {\n        const queue = localStorage.getItem(\"queue_list\")\n        const queueFilms = queue ? JSON.parse(queue) : []\n\n        if (queueFilms.length === 0) {\n            libraryQueuedList.innerHTML = `<li class=\"api-error\">\n                <p class=\"api-error__desc\">The list of queued movies is empty.</p>\n                </li>`\n        }\n        else {\n            libraryQueuedList.innerHTML = \"\"\n            queueFilms.map(film => {\n                libraryQueuedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n            })\n        }\n    }\n    if (watchedBTN.classList.contains(\"btn--active\")) {\n        const watched = localStorage.getItem(\"watched_list\")\n        const watchedFilms = watched ? JSON.parse(watched) : []\n\n        if (watchedFilms.length === 0) {\n            libraryWatchedList.innerHTML = `<li class=\"api-error\">\n                <p class=\"api-error__desc\">The list of watched movies is empty.</p>\n                </li>`\n        }\n        else {\n            libraryWatchedList.innerHTML = \"\"\n            watchedFilms.map(film => {\n            libraryWatchedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n        }) \n        }   \n    }\n}\nfunction libraryCloseModal(event) {\n  event.preventDefault();\n  if (event.target === refs.backdrop) {\n    if (queueBTN.classList.contains(\"btn--active\")) {\n        const queue = localStorage.getItem(\"queue_list\")\n        const queueFilms = queue ? JSON.parse(queue) : []\n\n        if (queueFilms.length === 0) {\n            libraryQueuedList.innerHTML = `<li class=\"api-error\">\n                <p class=\"api-error__desc\">The list of queued movies is empty.</p>\n                </li>`\n        }\n        else {\n            libraryQueuedList.innerHTML = \"\"\n            queueFilms.map(film => {\n                libraryQueuedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n            })\n        }\n    }\n    if (watchedBTN.classList.contains(\"btn--active\")) {\n        const watched = localStorage.getItem(\"watched_list\")\n        const watchedFilms = watched ? JSON.parse(watched) : []\n\n        if (watchedFilms.length === 0) {\n            libraryWatchedList.innerHTML = `<li class=\"api-error\">\n                <p class=\"api-error__desc\">The list of watched movies is empty.</p>\n                </li>`\n        }\n        else {\n            libraryWatchedList.innerHTML = \"\"\n            watchedFilms.map(film => {\n            libraryWatchedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n        }) \n        }   \n    }\n    }\n}\nfunction libraryModalKeyDown(event) {\n    console.log(event.code);\n        if (event.code === 'Escape') {\n            console.log(\"done\");\n            if (queueBTN.classList.contains(\"btn--active\")) {\n        const queue = localStorage.getItem(\"queue_list\")\n        const queueFilms = queue ? JSON.parse(queue) : []\n\n        if (queueFilms.length === 0) {\n            libraryQueuedList.innerHTML = `<li class=\"api-error\">\n                <p class=\"api-error__desc\">The list of queued movies is empty.</p>\n                </li>`\n        }\n        else {\n            libraryQueuedList.innerHTML = \"\"\n            queueFilms.map(film => {\n                libraryQueuedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n            })\n        }\n            }\n            if (watchedBTN.classList.contains(\"btn--active\")) {\n                const watched = localStorage.getItem(\"watched_list\")\n                const watchedFilms = watched ? JSON.parse(watched) : []\n\n                if (watchedFilms.length === 0) {\n                    libraryWatchedList.innerHTML = `<li class=\"api-error\">\n                        <p class=\"api-error__desc\">The list of watched movies is empty.</p>\n                        </li>`\n                }\n                else {\n                    libraryWatchedList.innerHTML = \"\"\n                    watchedFilms.map(film => {\n                    libraryWatchedList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n                }) \n                }   \n            }\n        }\n    }"],"names":["parcelRequire","document","querySelector","$b936b88fd014d8ec$var$libraryWatchedList","$b936b88fd014d8ec$var$libraryQueuedList","$b936b88fd014d8ec$var$watchedBTN","$b936b88fd014d8ec$var$queueBTN","addEventListener","$6K2nx","openBackDrop","addClassHidden","$iQg7w","getToBtns","window","$b936b88fd014d8ec$var$showWatchedList","evt","preventDefault","style","display","classList","remove","add","removeEventListener","innerHTML","queue","localStorage","getItem","queueFilms","JSON","parse","length","map","film","insertAdjacentHTML","$b936b88fd014d8ec$var$createLibraryMarkup","$b936b88fd014d8ec$var$showQueuedList","genresList","genres","genre","push","name","join","date","release_date","slice","first_air_date","id","poster_path","original_title","watched","watchedFilms","$krGWQ","refs","modalCloseBtn","contains","event","console","log","code","backdrop","target"],"version":3,"file":"library.4a49d90f.js.map"}