{"mappings":"gfAAAA,EAAA,S,4CCAAA,EAAA,S,2CAIMC,EAAkBC,SAASC,cAAc,0BACzCC,EAAaF,SAASC,cAAc,gBACpCE,EAAWH,SAASC,cAAc,cASxC,SAASG,EAAoBC,GAEzB,IAAMC,EAAa,GAIbC,GAHYF,EAAKE,OAAOC,KAAI,SAAAC,GAC9BH,EAAWI,KAAKD,EAAME,K,IAEXL,EAAWM,KAAK,OAEzBC,EAAOR,EAAKS,aAAaC,MAAM,EAAG,IAAMV,EAAKW,eAAeD,MAAM,EAAG,GAe3E,OAdAE,QAAQC,IAAIL,GAEG,0FAG+BM,OAFOd,EAAKe,GAAG,qGAG9CD,OAD+Bd,EAAKgB,YAAY,wBAE5CF,OADJd,EAAKiB,gBAAkBjB,EAAKM,KAAK,6BAEEQ,OAD/Bd,EAAKe,GAAG,4DAEjBD,OADwCd,EAAKe,GAAG,oBAGVD,OAFtCd,EAAKiB,gBAAkBjB,EAAKM,KAAK,2EAEiBQ,OAAZd,EAAKe,GAAG,MAAgBD,OAAZZ,EAAO,OAAUY,OAALN,EAAK,oC,CAKjF,SAASU,EAAgBC,GACrBA,EAAIC,iBAEJ,IAAMC,EAAUC,aAAaC,QAAQ,gBAC/BC,EAAeH,EAAUI,KAAKC,MAAML,GAAW,GAEzB,IAAxBG,EAAaG,OACbjC,EAAgBkC,UAAa,6HAK7BJ,EAAarB,KAAI,SAAAH,GACbN,EAAgBmC,mBAAmB,YAAa9B,EAAoBC,G,IAqChF,SAAS8B,IACLpC,EAAgBkC,UAAY,E,CApFhClC,EAAgBqC,iBAAiB,QAASC,EAAAC,cAC1CvC,EAAgBqC,iBAAiB,QAASC,EAAAE,gBAC1CC,OAAOJ,iBAAiB,OAAQb,GAChCpB,EAASiC,iBAAiB,SAwE1B,SAAwBZ,GACpBA,EAAIC,iBACJvB,EAAWuC,UAAUC,OAAO,eAC5BvC,EAASsC,UAAUE,IAAI,eACvBH,OAAOI,oBAAoB,OAAQrB,GACnCY,IA7BJ,SAAwBX,GACpBA,EAAIC,iBAEJ,IAAMoB,EAAQlB,aAAaC,QAAQ,cAC7BkB,EAAaD,EAAQf,KAAKC,MAAMc,GAAS,GAErB,IAAtBC,EAAWd,OACXjC,EAAgBkC,UAAa,4HAK7Ba,EAAWtC,KAAI,SAAAH,GACXN,EAAgBmC,mBAAmB,YAAa9B,EAAoBC,G,IAiB5E0C,CAAevB,E,IA7EnBtB,EAAWkC,iBAAiB,SAgE5B,SAAwBZ,GACpBA,EAAIC,iBACJtB,EAASsC,UAAUC,OAAO,eAC1BxC,EAAWuC,UAAUE,IAAI,eACzBR,IACAZ,EAAgBC,E,IApEpBzB,EAAgBqC,iBAAiB,QAASY,EAAAC,WAiF1CC,EAAAC,KAAKC,cAAchB,iBAAiB,SACpC,SAAuBZ,GACnB,IAAM6B,EAAcvB,KAAKC,MAAMJ,aAAaC,QAAQ,iBAC9C0B,EAAaxB,KAAKC,MAAMJ,aAAaC,QAAQ,eAExB,IAAvByB,EAAYrB,SACZjC,EAAgBkC,UAAa,8HAIP,IAAtBqB,EAAWtB,SACXjC,EAAgBkC,UAAa,6H","sources":["src/library.js","src/js/getFromStorage.js"],"sourcesContent":["import { refs } from './js/refs';\nimport './js/AuthenticationService';\nimport { onTopBallon } from './js/component/btn-to-top';\nimport './js/day-night';\nimport './js/teamModal';\nimport './js/getFromStorage';\nimport './js/set-to-watched';\nimport './js/ApiService';\n","import axios from \"axios\"\nimport { toggleClassHidden, openBackDrop, cleanBackDrop, modalKeyDown, closeModal, addClassHidden } from \"./openModal\"\nimport { refs } from \"./refs\"\nimport {getToBtns} from \"./component/getToBtns\"\nconst libraryMainList = document.querySelector(\"[data-film-modal-open]\")\nconst watchedBTN = document.querySelector(\".watched-btn\")\nconst queueBTN = document.querySelector(\".queue-btn\")\nlibraryMainList.addEventListener(\"click\", openBackDrop)\nlibraryMainList.addEventListener(\"click\", addClassHidden)\nwindow.addEventListener(\"load\", showWatchedList)\nqueueBTN.addEventListener(\"click\", openOqueueList)\nwatchedBTN.addEventListener(\"click\", openWathedList)\nlibraryMainList.addEventListener(\"click\", getToBtns)\n\n\nfunction createLibraryMarkup(film) {\n\n    const genresList = []\n    const genreList = film.genres.map(genre => {\n        genresList.push(genre.name)\n    })\n    const genres = genresList.join(', ')\n    \n    const date = film.release_date.slice(0, 4) || film.first_air_date.slice(0, 4)\n    console.log(date);\n\n    const markup = `<li class=\"main-render__item\">\n        <a href=\"#\" class=\"main-render__link\" data-id=\"${film.id}\">\n            <img class=\"main-render__image\"\n            src=\"https://image.tmdb.org/t/p/w500${film.poster_path}\"\n            alt=\"${film.original_title || film.name}\" \n            data-id=\"${film.id}\">\n            <h2 class=\"main-render__title\" data-id=\"${film.id}\">\n            ${film.original_title || film.name}\n            </h2>\n            <p class=\"main-render__text\" data-id=\"${film.id}\">${genres} | ${date}</p>\n        </a>\n        </li>`\n    return markup\n}\nfunction showWatchedList(evt) {\n    evt.preventDefault()\n\n    const watched = localStorage.getItem(\"watched_list\")\n    const watchedFilms = watched ? JSON.parse(watched) : []\n\n    if (watchedFilms.length === 0) {\n        libraryMainList.innerHTML = `<li class=\"api-error\">\n            <p class=\"api-error__desc\">The list of watched movies is empty.</p>\n            </li>`\n    }\n    else {\n        watchedFilms.map(film => {\n            libraryMainList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n        })\n        \n    }\n}\nfunction showQueuedList(evt) {\n    evt.preventDefault()\n\n    const queue = localStorage.getItem(\"queue_list\")\n    const queueFilms = queue ? JSON.parse(queue) : []\n\n    if (queueFilms.length === 0) {\n        libraryMainList.innerHTML = `<li class=\"api-error\">\n            <p class=\"api-error__desc\">The list of queued movies is empty.</p>\n            </li>`\n    }\n    else {\n        queueFilms.map(film => {\n            libraryMainList.insertAdjacentHTML(\"beforeend\", createLibraryMarkup(film))\n        })\n    }\n}\nfunction openWathedList(evt) {\n    evt.preventDefault()\n    queueBTN.classList.remove(\"btn--active\")\n    watchedBTN.classList.add(\"btn--active\")\n    cleanLibrary()\n    showWatchedList(evt)\n}\nfunction openOqueueList(evt) {\n    evt.preventDefault()\n    watchedBTN.classList.remove(\"btn--active\")\n    queueBTN.classList.add(\"btn--active\")\n    window.removeEventListener(\"load\", showWatchedList)\n    cleanLibrary()\n    showQueuedList(evt)\n}\nfunction cleanLibrary() {\n    libraryMainList.innerHTML = \"\"\n}\nrefs.modalCloseBtn.addEventListener(\"click\", closeAndClean)\nfunction closeAndClean(evt) {\n    const watchedList = JSON.parse(localStorage.getItem(\"watched_list\"))\n    const queuedList = JSON.parse(localStorage.getItem(\"queue_list\"))\n\n    if (watchedList.length === 0) {\n        libraryMainList.innerHTML = `<li class=\"api-error\">\n            <p class=\"api-error__desc\">The list of watched movies is empty.</p>\n            </li>`\n    }\n    if (queuedList.length === 0) {\n        libraryMainList.innerHTML = `<li class=\"api-error\">\n            <p class=\"api-error__desc\">The list of watched movies is empty.</p>\n            </li>`\n    }\n}"],"names":["parcelRequire","$98165248b01bd31e$var$libraryMainList","document","querySelector","$98165248b01bd31e$var$watchedBTN","$98165248b01bd31e$var$queueBTN","$98165248b01bd31e$var$createLibraryMarkup","film","genresList","genres","map","genre","push","name","join","date","release_date","slice","first_air_date","console","log","concat","id","poster_path","original_title","$98165248b01bd31e$var$showWatchedList","evt","preventDefault","watched","localStorage","getItem","watchedFilms","JSON","parse","length","innerHTML","insertAdjacentHTML","$98165248b01bd31e$var$cleanLibrary","addEventListener","$bktnR","openBackDrop","addClassHidden","window","classList","remove","add","removeEventListener","queue","queueFilms","$98165248b01bd31e$var$showQueuedList","$hQyPS","getToBtns","$4Nugj","refs","modalCloseBtn","watchedList","queuedList"],"version":3,"file":"library.c5d993d7.js.map"}